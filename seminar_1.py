import random
from mimetypes import guess_all_extensions
from symbol import if_stmt
from sys import flags
from types import new_class
from unittest import registerResult

from setuptools.package_index import egg_info_for_url

'''
–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –µÃà–ª–∫—É —Å–ø—Ä–æ—Å–∏–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤.
'''

# num_of_rows = int(input('How many rows do you want the tree to have?'))

# num_of_rows = random.randint(1,20)
# stars_count = 1
#
# while num_of_rows:
#     blank_space = ' ' * (num_of_rows - 1)
#     stars = '*' * stars_count
#     print(blank_space + stars)
#     stars_count += 2
#     num_of_rows -= 1

'''
–ü–æ—Å—á–∏—Ç–∞–∏ÃÜ—Ç–µ —Å—É–º–º—É —á–µÃà—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç 1 –¥–æ n –∏—Å–∫–ª—é—á–∞—è –∫—Ä–∞—Ç–Ω—ã–µ e.
–ò—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ while –∏ if.
–ü–æ–ø—Ä–æ–±—É–∏ÃÜ—Ç–µ —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è e –∏ n.
'''

# n = int(input('Please enter a number: '))
# e = 17
# result = 0
#
# while n > 1:
#     if n % 2 == 0 and n % e != 0:
#         result += n
#     n -= 1
#
# print(result)

# while n > 1:
#     result += n if n % 2 == 0 and n % e != 0 else 0 #using ternary operator
#     n -= 1
#
# print(result)

'''
üìå –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≥–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω–æ—Å—Ç—å.
üìå –†–∞—Å–ø–∏—à–∏—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ü–µ–ø–æ—á–∫–µ elif
üìå –û—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∏—Å–µ–ª
üìå –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–∏—Ç–µ –≥–æ–¥ –≤–≤–æ–¥–∞ –ì—Ä–∏–≥–æ—Ä–∏–∞–Ω—Å–∫–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
üìå –í –∫–æ–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω input –∏ –æ–¥–∏–Ω print


This is how the Gregorian calendar calculates leap years: If the year is divisible by four, it's a leap year. 
But if the year can be divided by 100 as well as four, it's not a leap year. 
However, if the year is divisible by 400, it is a leap year.
'''

LEAP_YEAR_START = 1582
DIVISIBLE_BY_4 = 4
DIVISIBLE_BY_100 = 100
DIVISIBLE_BY_400 = 400
flag = True
year = None
#
# while flag:
#     year = int(input('Enter year: '))
#     if year >= LEAP_YEAR_START:
#         flag = False
#     else:
#         print('Error! Enter a year greater than or equal to 1582.')
# else:
#     if year % DIVISIBLE_BY_4 != 0:
#         print('Not leap year.')
#     elif year % DIVISIBLE_BY_400 == 0 or year % DIVISIBLE_BY_100 != 0:
#         print('Leap year')
#     else:
#         print('Not leap year.')


if (year % DIVISIBLE_BY_4 == 0 and year % DIVISIBLE_BY_100 != 0) | year % DIVISIBLE_BY_400 == 0:
    print('Leap year.')
elif year % DIVISIBLE_BY_100 == 0 and year % DIVISIBLE_BY_400 != 0:
    print('Not leap year.')
else:
    print('Not leap year.')

'''
üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 999. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏ —Å–æ–æ–±—â–∏—Ç–µ —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ: 
    —Ü–∏—Ñ—Ä–∞, –¥–≤—É–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —Ç—Ä–µÃà—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ.
üìå –î–ª—è —Ü–∏—Ñ—Ä—ã –≤–µ—Ä–Ω–∏—Ç–µ –µ–µÃà –∫–≤–∞–¥—Ä–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä 5 - 25
üìå –î–ª—è –¥–≤—É–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä 30 - 0
üìå –î–ª—è —Ç—Ä–µÃà—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –µ–≥–æ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 520 - 25
üìå –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ
üìå –û—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∏—Å–µ–ª
üìå –í –∫–æ–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω input –∏ –æ–¥–∏–Ω print
'''
# flag = True
# number = None
# MIN_INPUT = 1
# MAX_INPUT = 999
#
# while flag:
#     number = int(input('Enter a number 1 - 999: '))
#     if MIN_INPUT <= number <= MAX_INPUT:
#         flag = False
#     else:
#         print('Error! Please enter a number between 1 and 999.')
# else:
#     if number < 10:
#         print(number ** 2)
#     elif 10 <= number < 100:
#         print((number // 10) * (number % 10))
#     else:
#         print(int(str(number)[::-1]))

'''
üìå –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ç 2—Ö2 –¥–æ 9—Ö10 –∫–∞–∫ –Ω–∞ —à–∫–æ–ª—å–Ω–æ–∏ÃÜ —Ç–µ—Ç—Ä–∞–¥–∫–µ.
'''
# for i in range(2,11):
#     for j in range(2,6):
#      print(f'{j} * {i:<2} = { j * i:<10}', end='\t')
#      if j == 5:
#          print()
#
# print('')
#
# for i in range(2,11):
#     for j in range(6,10):
#      print(f'{j} * {i:<2} = { j * i:<10}', end='\t')
#      if j == 9:
#          print()

'''
–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ —Å—É–º–º–∞ –ª—é–±—ã—Ö –¥–≤—É—Ö –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω –±–æ–ª—å—à–µ —Ç—Ä–µ—Ç—å–µ–∏ÃÜ. 
–î–∞–Ω–æ a, b, c ‚Äî —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞. 
–¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–ª–∏–Ω—É –∫–∞–∂–¥–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞-—Å—Ç–æ—Ä–æ–Ω—ã —Å —Å—É–º–º–æ–∏ÃÜ –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö. 
–ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –≤ –æ–¥–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Ä–µ–∑–æ–∫ –æ–∫–∞–∂–µ—Ç—Å—è –±–æ–ª—å—à–µ —Å—É–º–º—ã –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö, —Ç–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å 
—Ç–∞–∫–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û—Ç–¥–µ–ª—å–Ω–æ —Å–æ–æ–±—â–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º, 
—Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–º –∏–ª–∏ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º.
'''

def triangle_check(a,b,c):
    if a + b <= c:
        return False
    elif a + c <= b:
        return False
    elif b + c <= a:
        return False
    else:
        return True

def triangle_type(a,b,c):
    if triangle_check(a,b,c):
        if a == b == c:
            return 'Equilateral'
        elif a != b != c:
            return 'Scalene'
        elif a == b or b == c or a == c:
            return 'Isosceles'
    else:
        return 'Not a triangle'

# print(triangle_type(5,3,7))

'''
–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ –∏ —Å–æ–æ–±—â–∞–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø—Ä–æ—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–º. 
–ò—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ¬´–ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –µ—Å–ª–∏ –¥–µ–ª–∏—Ç—Å—è –Ω–∞—Ü–µ–ª–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É –∏ –Ω–∞ —Å–µ–±—è¬ª. 
–°–¥–µ–ª–∞–∏ÃÜ—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –≤–≤–æ–¥ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –∏ —á–∏—Å–µ–ª –±–æ–ª—å—à–µ 100 —Ç—ã—Å—è—á.
'''
def num_check():
    while True:
        num = int(input('Enter a number between 0 and 100,000.'))
        if 0 <= num <= 100000:
            return num
        else:
            print('Error! Number is not between 0 and 100,000.')


def prime_number_check():
    num = num_check()
    if num == 0 or num == 1:
        return 'Not prime.'
    else:
        for i in range(2, num):
            if num % i == 0:
                return 'Not prime.'
    return 'Prime'

# print(prime_number_check())

'''
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1000. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –∑–∞ 10 –ø–æ–ø—ã—Ç–æ–∫. 
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å ¬´–±–æ–ª—å—à–µ¬ª –∏–ª–∏ ¬´–º–µ–Ω—å—à–µ¬ª –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–∏ÃÜ –ø–æ–ø—ã—Ç–∫–∏. 
–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–∏ÃÜ–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ –∫–æ–¥:
'''
def num_guessing_name():
    num = random.randint(0,1000)
    num_of_guesses = 10
    while num_of_guesses > 0:
        guess = int(input('Enter your guess:'))
        if guess == num:
            print('You guessed it!')
            break
        elif guess > num:
            print(f'Less than {guess}')
        elif guess < num:
            print(f'Greater than {guess}')

# num_guessing_name()



























