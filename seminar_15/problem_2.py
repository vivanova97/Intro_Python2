"""–ó–∞–¥–∞–Ω–∏–µ No2
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ –ø—Ä–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –±—ã–ª —Å–æ–∑–¥–∞–Ω –ª–æ–≥–∏—Ä—É—é—â–∏–∏ÃÜ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä. –û–Ω —Å–æ—Ö—Ä–∞–Ω—è–ª –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ–µÃà —Ä–∞–±–æ—Ç—ã –≤
—Ñ–∞–∏ÃÜ–ª.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–∏ÃÜ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ –º–æ–¥—É–ª—å logging."""

"""–ó–∞–¥–∞–Ω–∏–µ No3
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É 2.
üìå –°–æ—Ö—Ä–∞–Ω—è–∏ÃÜ—Ç–µ –≤ –ª–æ–≥ —Ñ–∞–∏ÃÜ–ª —Ä–∞–∑–¥–µ–ª—å–Ω–æ:
‚óã —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è,
‚óã –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è,
‚óã –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞),
‚óã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤—ã–∑–æ–≤–∞,
‚óã —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""

from typing import Callable
from functools import wraps
import logging


# logging.basicConfig(level=logging.INFO, format='{asctime} - {msg}',
#                     style='{')

def main(func: Callable):
    logger = logging.getLogger(func.__name__)
    logger.setLevel(level=logging.INFO)
    file_handler = logging.FileHandler(f"{func.__name__}.log", encoding='utf-8')
    file_handler.setLevel(logging.INFO)
    formatter = logging.Formatter('{levelname} - {asctime} - {msg}', style='{')
    file_handler.setFormatter(formatter)
    logger.addHandler(file_handler)

    @wraps(func)
    def wrapper(*args, **kwargs):
        result = func(*args, **kwargs)
        logger.info(f'function_name={func.__name__}, {args=}, {kwargs=}, result={result}')
        return result
    return wrapper

@main
def sum_(*args):
    result_ = 0
    for arg in args:
        result_ += arg
    return result_

@main
def mult_(*args):
    result_ = 1
    for arg in args:
        result_ *= arg
    return result_

if __name__ == '__main__':
    sum_(2,3,5,6,7)
    mult_(1,2,3)
